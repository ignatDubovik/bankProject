// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bank.Data;

namespace bank.Migrations
{
    [DbContext(typeof(AppDBContent))]
    partial class AppDBContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bank.Data.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("bank.Data.Models.Contract", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("clientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateOfSigning")
                        .HasColumnType("datetime2");

                    b.Property<int>("employeeID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clientID");

                    b.HasIndex("employeeID");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("bank.Data.Models.Deposit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepositTypeid")
                        .HasColumnType("int");

                    b.Property<int>("clientID")
                        .HasColumnType("int");

                    b.Property<int>("contractNumber")
                        .HasColumnType("int");

                    b.Property<string>("dateOfOpening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("initialMoney")
                        .HasColumnType("int");

                    b.Property<int>("plannedFinalAmountOfMoney")
                        .HasColumnType("int");

                    b.Property<int>("typeOfDeposit")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("DepositTypeid");

                    b.HasIndex("clientID");

                    b.ToTable("Deposit");
                });

            modelBuilder.Entity("bank.Data.Models.DepositType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("capitalization")
                        .HasColumnType("int");

                    b.Property<int>("maxMoney")
                        .HasColumnType("int");

                    b.Property<int>("minMoney")
                        .HasColumnType("int");

                    b.Property<int>("percent")
                        .HasColumnType("int");

                    b.Property<int>("period")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("DepositType");
                });

            modelBuilder.Entity("bank.Data.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("bank.Data.Models.Contract", b =>
                {
                    b.HasOne("bank.Data.Models.Client", "Client")
                        .WithMany("contracts")
                        .HasForeignKey("clientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bank.Data.Models.Employee", "Employee")
                        .WithMany("contracts")
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bank.Data.Models.Deposit", b =>
                {
                    b.HasOne("bank.Data.Models.DepositType", "DepositType")
                        .WithMany("deposits")
                        .HasForeignKey("DepositTypeid");

                    b.HasOne("bank.Data.Models.Client", "Client")
                        .WithMany("deposits")
                        .HasForeignKey("clientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
